resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
- name: resource-src
  type: git
  source:
    uri: https://github.com/ljfranklin/terraform-resource
- name: terraform
  type: terraform
  source:
    storage:
      access_key_id:     {{storage_access_key}}
      secret_access_key: {{storage_secret_key}}
      bucket:            {{storage_bucket}}
      key:               terraform-lock-test.tfstate
    terraform:
      source: resource-src/fixtures/aws
      vars:
        access_key:  {{ec2_access_key}}
        secret_key:  {{ec2_secret_key}}
        vpc_id:      {{test_vpc_id}}
        subnet_cidr: 10.0.0.0/24
- name: aws-environments
  type: pool
  source:
    uri: git@github.com:ljfranklin/terraform-resource.git
    branch: ci-pool-test
    pool: aws-ci-pool
    private_key: {{pool_git_private_key}}

jobs:
  - name: setup-infrastructure
    plan:
      - get: resource-src
      - put: terraform
      - task: write-lock
        config:
          platform: linux
          inputs:
            - name: terraform
          outputs:
            - name: lock
          run:
            path: /bin/sh
            args:
              - -c
              - "cp terraform/metadata lock/ && echo 'tf-lock' > lock/name"
      - put: aws-environments
        params: {add: lock/}

  - name: acquire-lock
    plan:
      - get: resource-src
      - get: terraform
        trigger: true
        passed: [setup-infrastructure]
      - put: aws-environments
        params: {acquire: true}
      - task: show-lock
        config:
          platform: linux
          inputs:
            - name: aws-environments
          run:
            path: /bin/sh
            args:
              - -c
              - "cat aws-environments/metadata"

  - name: destroy-infrastructure-and-lock
    plan:
      - get: resource-src
      - get: aws-environments
        trigger: true
        passed: [acquire-lock]
      - put: terraform
        params:
          action: destroy
        get_params:
          action: destroy
      - put: aws-environments
        params: {remove: aws-environments}
